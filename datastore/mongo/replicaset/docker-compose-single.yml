# https://github.com/bitnami/bitnami-docker-mongodb
---
version: '2'

services:
  # 单节点副本集，仅用于测试环境
  mongodb-primary:
    image: 'bitnami/mongodb:4.2'
    environment:
      - MONGODB_REPLICA_SET_NAME=rs0  # 副本集名称
      - MONGODB_REPLICA_SET_MODE=primary
      # 额外的 mongo 参数（设置缓存大小）
      - MONGODB_EXTRA_FLAGS=--wiredTigerCacheSizeGB=2
      # 为了让 mongo 在外部可用，必须将 hostname 设为可解析的域名，或者宿主机 IP 地址。
      - MONGODB_ADVERTISED_HOSTNAME=192.168.122.1
      # 安全设置，设置 root 密码与副本集认证密钥
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      # 是否允许空密码，此参数和上面的两个安全相关的环境变量冲突，只能二选一！
      # - ALLOW_EMPTY_PASSWORD=yes
    restart: always
    ports:
    - 27017:27017

    # 只需要保存主节点的数据
    # 首次运行时，自动创建的映射文件夹可能有权限问题，注意自行修改。
    volumes:
      - './mongodb_master_data:/bitnami'

# 或者使用 Docker 官方镜像，通过 healthcheck 初始化副本集
# ---
# # https://hub.docker.com/_/mongo/
# version: "3.4"
# services:
#   # 单节点副本集，仅测试用！
#   mongo1:
#     container_name: mongo1
#     image: mongo:4.2
#     restart: always
#     # 设置如下两个环境变量（缺一不可），可以创建 root 用户。
#     # 注意：启动 mongo 时需要添加 `--auth` 才能强制进行认证。（未测试）
#     # environment:
#     #   MONGO_INITDB_ROOT_USERNAME: admin
#     #   MONGO_INITDB_ROOT_PASSWORD: change_me
#     # wiredTigerCacheSizeGB 限制缓存上限（使用内存），注意要为别的功能预留部分内存。
#     entrypoint: ["mongod", "--auth", "--bind_ip_all", "--replSet=rs0", "--wiredTigerCacheSizeGB=2"]
#     volumes:
#       - ./mongo-data1:/data/db
#     ports:
#       - "27017:27017"
#     # 利用 healthcheck 进行副本集的自动初始化
#     healthcheck: # https://docs.docker.com/compose/compose-file/#healthcheck
#       test:
#         [
#           "CMD",
#           "mongo",
#           "--eval",
#           # 注意：下述命令中的 `mongo.db.local` 必须替换成正确可用的域名！并且客户端能正常解析！
#           'rs.initiate( { _id : "rs0",members: [{ _id: 0, host: "mongo.db.local:27017" }] })',
#         ]
#       interval: 30s
#       timeout: 5s
#       retries: 3
#       start_period: 10s
